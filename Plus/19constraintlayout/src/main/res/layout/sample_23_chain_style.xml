<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:ignore="ExtraText">


    约束链的使用场景是需要将两个View打包的时候[类似于一层布局嵌套了]

    这两个以上的View相互约束[ImageView的Top和Button的Bottom]，作为一个整体，现在我希望多个View可以挨着，
    就可以使用app:layout_constraintVertical_chainStyle
    有三个取值，分别是 packet、spread、spread_inside

    packet
        表示内部全部打包，这时候，四个View既相互建立了约束，又做了打包，像这样子[你可以结合simple_12中做整体居中等操作都可以]
        使用packet时，如果需要间距，就加上 layout_marginTop 之类的属性
    spread
        表示分散，这个值是默认值，像这样子
    spread_inside
        表示内部分散，他会均匀分布在约束的内部，顶部和底部分别挨着Top和Bottom，像这样子
    <ImageView
        android:id="@+id/imageView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/sample5_earth"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintBottom_toTopOf="@id/button"

        app:layout_constraintVertical_chainStyle="packed"

        />

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintBottom_toTopOf="@+id/imageView4"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/imageView3" />


    <ImageView
        android:id="@+id/imageView4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"

        android:src="@drawable/sample5_earth"
        app:layout_constraintBottom_toTopOf="@+id/button5"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@id/button" />

    <Button
        android:id="@+id/button5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Button"
        app:layout_constraintTop_toBottomOf="@id/imageView4"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent" />

</android.support.constraint.ConstraintLayout>